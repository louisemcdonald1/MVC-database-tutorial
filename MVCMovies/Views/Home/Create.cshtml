@model MVCMovies.Models.Movie

@{
    //this is picked up by _Layout and put in 
    //the HTML <title> tag
    ViewBag.Title = "Create";
}

<h2>Create</h2>
@*A form is needed here to pass the data for the Movie record
    back to the POST Create action method in the Home Controller*@

@using (Html.BeginForm())
{
    //helps protect against CSRF (Cross Site Request Forgery) attack
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Movie</h4>
        <hr />
        @*lists all error messages*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @*This creates a label for the data, using the column heading
                from the database table*@
            @Html.LabelFor(m => m.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*This creates a text box that the user can type in.  The
                    information in the text box comes from the property
                    mentioned in the lambda expression. Any information
                    entered will be assigned to that property*@
                @Html.EditorFor(m => m.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Genre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
            </div>
        </div>

        @*An HTML button is used to submit the form*@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create Movie" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@*Link to return to Index action method and view*@
@Html.ActionLink("Back to List", "Index")

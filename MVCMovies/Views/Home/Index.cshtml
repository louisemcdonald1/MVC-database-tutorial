@*The model statement needs IEnumerable in it, as the data being
    passed in is a collection (not a single object)*@
@model IEnumerable<MVCMovies.Models.Movie>

@*This view uses a layout file, so doesn't need an HTML header, as
    this is in the layout file.  A link to the layout file isn't 
    needed here, as it's in the ViewStart.cshtml file, which MVC
    checks whenever an application starts running*@

@{
    //This is picked up by the layout file and becomes the title
    //on the broswer tab
    ViewBag.Title = "Index";
}

<h2>Movies</h2>

@*link for creating a new record - the first parameter is the text for the link
    and the second is the action method that it goes to*@
@Html.ActionLink("Create new movie", "Create")

@*form and text box for getting a movie title (or part of a title) that the user wants
    to search for*@
@using (Html.BeginForm())
{
    <p>
        @*creates a dropdown list, using a SelectList called movieGenre
        that it has found in the ViewBag.  The selected value from the
        list is put in a variable called movieGenre and passed into the
        Index action method.  "All" is the default for the list*@
        Genre: @Html.DropDownList("movieGenre", "All")
        @*creates a textbox - any value entered in it is put into the 
        string variable SearchString and passed into the Index action method*@
        Title: @Html.TextBox("SearchString")
        @*HTML button for submitting the form*@
        <input type="submit" value="Filter" />
    </p>
}

<table class="table">
    @*column headings for the table*@
    <tr>
        <th>@Html.DisplayNameFor(model => model.Title)</th>
        <th>@Html.DisplayNameFor(model => model.ReleaseDate)</th>
        <th>@Html.DisplayNameFor(model => model.Genre)</th>
        <th>@Html.DisplayNameFor(model => model.Price)</th>
        @*<th>@Html.DisplayNameFor(model => model.ImageUrl)</th>*@
    </tr>
   @*body of the table - each iteration of the foreach creates a
       row in the table*@
    @foreach (var item in Model)
    {
        <tr>
            @*data for the table*@
            <td>@Html.DisplayFor(m => item.Title)</td>
            <td>@Html.DisplayFor(m => item.ReleaseDate)</td>
            <td>@Html.DisplayFor(m => item.Genre)</td>
            <td>@Html.DisplayFor(m => item.Price)</td>
            @*renders a URL as an image - null values will crash the application*@
            <td><img src="@Url.Content(item.ImageUrl)" height="100" /></td>
        
            <td>
                @*links to edit, get details or delete for each record, which pass
                the record id to the action method being called. The first parameter
                is the text for the link, the second is the name of the action method
                and the third passes the id of the current record to the action method*@
                @Html.ActionLink("Edit Record", "Edit", new { id = item.Id })
                @Html.ActionLink("Details of Record", "Details", new { id = item.Id })
                @Html.ActionLink("Delete Record", "Delete", new { id = item.Id })
            </td>
        </tr>
    }
</table>

